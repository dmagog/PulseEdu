"""Add group_id to students table

Revision ID: f75385842e21
Revises: a9161487a0ea
Create Date: 2025-09-08 15:38:52.684486

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f75385842e21'
down_revision: Union[str, None] = 'a9161487a0ea'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_llm_feedback_course_id', table_name='llm_feedback')
    op.drop_index('ix_llm_feedback_created_by', table_name='llm_feedback')
    op.drop_index('ix_llm_feedback_feedback_type', table_name='llm_feedback')
    op.drop_index('ix_llm_feedback_recommendation_id', table_name='llm_feedback')
    op.drop_index('ix_llm_feedback_student_id', table_name='llm_feedback')
    op.drop_table('llm_feedback')
    op.drop_index('ix_llm_recommendations_cache_key', table_name='llm_recommendations')
    op.drop_index('ix_llm_recommendations_course_id', table_name='llm_recommendations')
    op.drop_index('ix_llm_recommendations_data_version', table_name='llm_recommendations')
    op.drop_index('ix_llm_recommendations_expires_at', table_name='llm_recommendations')
    op.drop_index('ix_llm_recommendations_student_id', table_name='llm_recommendations')
    op.drop_table('llm_recommendations')
    op.drop_index('ix_llm_call_logs_course_id', table_name='llm_call_logs')
    op.drop_index('ix_llm_call_logs_created_at', table_name='llm_call_logs')
    op.drop_index('ix_llm_call_logs_prompt_hash', table_name='llm_call_logs')
    op.drop_index('ix_llm_call_logs_request_type', table_name='llm_call_logs')
    op.drop_index('ix_llm_call_logs_status', table_name='llm_call_logs')
    op.drop_index('ix_llm_call_logs_student_id', table_name='llm_call_logs')
    op.drop_table('llm_call_logs')
    op.drop_index('ix_llm_usage_stats_date', table_name='llm_usage_stats')
    op.drop_table('llm_usage_stats')
    # op.drop_index('ix_student_clusters_student_id_course_id', table_name='student_clusters')  # Index doesn't exist
    op.add_column('students', sa.Column('group_id', sa.String(50), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('students', 'group_id')
    op.create_index('ix_student_clusters_student_id_course_id', 'student_clusters', ['student_id', 'course_id'], unique=False)
    op.create_table('llm_usage_stats',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('total_requests', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('successful_requests', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('failed_requests', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_tokens_used', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_cost_usd', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('unique_students', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('unique_courses', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('avg_response_time_ms', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='llm_usage_stats_pkey')
    )
    op.create_index('ix_llm_usage_stats_date', 'llm_usage_stats', ['date'], unique=False)
    op.create_table('llm_call_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('request_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('prompt_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('request_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('response_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('response_time_ms', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('error_message', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cost_usd', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('model_used', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('max_tokens', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('retry_count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('response_preview', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('recommendations_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='llm_call_logs_pkey')
    )
    op.create_index('ix_llm_call_logs_student_id', 'llm_call_logs', ['student_id'], unique=False)
    op.create_index('ix_llm_call_logs_status', 'llm_call_logs', ['status'], unique=False)
    op.create_index('ix_llm_call_logs_request_type', 'llm_call_logs', ['request_type'], unique=False)
    op.create_index('ix_llm_call_logs_prompt_hash', 'llm_call_logs', ['prompt_hash'], unique=False)
    op.create_index('ix_llm_call_logs_created_at', 'llm_call_logs', ['created_at'], unique=False)
    op.create_index('ix_llm_call_logs_course_id', 'llm_call_logs', ['course_id'], unique=False)
    op.create_table('llm_recommendations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('student_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cache_key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data_version', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('recommendations_json', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='llm_recommendations_pkey')
    )
    op.create_index('ix_llm_recommendations_student_id', 'llm_recommendations', ['student_id'], unique=False)
    op.create_index('ix_llm_recommendations_expires_at', 'llm_recommendations', ['expires_at'], unique=False)
    op.create_index('ix_llm_recommendations_data_version', 'llm_recommendations', ['data_version'], unique=False)
    op.create_index('ix_llm_recommendations_course_id', 'llm_recommendations', ['course_id'], unique=False)
    op.create_index('ix_llm_recommendations_cache_key', 'llm_recommendations', ['cache_key'], unique=False)
    op.create_table('llm_feedback',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('recommendation_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('student_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('feedback_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('feedback_text', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('edited_recommendation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_by', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='llm_feedback_pkey')
    )
    op.create_index('ix_llm_feedback_student_id', 'llm_feedback', ['student_id'], unique=False)
    op.create_index('ix_llm_feedback_recommendation_id', 'llm_feedback', ['recommendation_id'], unique=False)
    op.create_index('ix_llm_feedback_feedback_type', 'llm_feedback', ['feedback_type'], unique=False)
    op.create_index('ix_llm_feedback_created_by', 'llm_feedback', ['created_by'], unique=False)
    op.create_index('ix_llm_feedback_course_id', 'llm_feedback', ['course_id'], unique=False)
    # ### end Alembic commands ###
